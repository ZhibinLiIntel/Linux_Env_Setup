neww -n Debug
splitw -h -p 60
select-pane -t 2
splitw -h -p 40
select-pane -t 1
splitw -v -p 10
select-pane -t 1
splitw -v -p 50
select-pane -t 2
splitw -v -p 50
select-pane -t 1
splitw -v -p 50
select-pane -t 7
splitw -v -p 50
select-pane -t 8


run 'cut -c3- ~/.tmux.conf.debug | sh -s _set_debug_windows'

# EOF
#
# # exit the script if any statement returns a non-true return value
# set -e
# _set_debug_windows() {
#   stack_tty=$(tmux display -pt 1 '#{pane_tty}')
#   variables_tty=$(tmux display -pt 2 '#{pane_tty}')
#   expressions_tty=$(tmux display -pt 3 '#{pane_tty}')
#   registers_tty=$(tmux display -pt 4 '#{pane_tty}')
#   threads_tty=$(tmux display -pt 5 '#{pane_tty}')
#   source_tty=$(tmux display -pt 6 '#{pane_tty}')
#   assembly_tty=$(tmux display -pt 7 '#{pane_tty}')
# 
#   filename=~/.gdbinit.d/auto
#   echo "# auto generated by tmux" > $filename
#   echo "dashboard -layout source expressions stack assembly !history variables !memory registers threads" >> $filename
#   echo "dashboard source -style height 40" >> $filename
#   echo "dashboard source -output $source_tty" >> $filename
#   echo "dashboard expressions -output $expressions_tty" >> $filename
#   echo "dashboard assembly -output $assembly_tty" >> $filename
#   echo "dashboard registers -output $registers_tty" >> $filename
#   echo "dashboard stack -output $stack_tty" >> $filename
#   echo "dashboard variables -output $variables_tty" >> $filename
#   echo "dashboard threads -output $threads_tty" >> $filename
# }
# "$@"
